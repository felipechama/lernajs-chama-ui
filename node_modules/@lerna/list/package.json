{
  "_args": [
    [
      "@lerna/list@3.14.0",
      "/home/peo_fchama/gitteste/lernajs-chama-ui/node_modules/lerna"
    ]
  ],
  "_from": "@lerna/list@3.14.0",
  "_hasShrinkwrap": false,
  "_id": "@lerna/list@3.14.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/@lerna/list",
  "_nodeVersion": "10.15.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/list_3.14.0_1557876577958_0.9292088696452474"
  },
  "_npmUser": {
    "email": "daniel.stockman@gmail.com",
    "name": "evocateur"
  },
  "_npmVersion": "lerna/3.14.0/node@v10.15.3+x64 (darwin)",
  "_phantomChildren": {},
  "_requested": {
    "name": "@lerna/list",
    "raw": "@lerna/list@3.14.0",
    "rawSpec": "3.14.0",
    "scope": "@lerna",
    "spec": "3.14.0",
    "type": "version"
  },
  "_requiredBy": [
    "/lerna"
  ],
  "_resolved": "https://registry.npmjs.org/@lerna/list/-/list-3.14.0.tgz",
  "_shasum": "cfe826937c63a3652003639eb7fd36bf4b0a3660",
  "_shrinkwrap": null,
  "_spec": "@lerna/list@3.14.0",
  "_where": "/home/peo_fchama/gitteste/lernajs-chama-ui/node_modules/lerna",
  "author": {
    "name": "Daniel Stockman",
    "url": "https://github.com/evocateur"
  },
  "bugs": {
    "url": "https://github.com/lerna/lerna/issues"
  },
  "dependencies": {
    "@lerna/command": "3.14.0",
    "@lerna/filter-options": "3.14.0",
    "@lerna/listable": "3.14.0",
    "@lerna/output": "3.13.0"
  },
  "description": "List local packages",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "fileCount": 6,
    "integrity": "sha512-Gp+9gaIkBfXBwc9Ng0Y74IEfAqpQpLiXwOP4IOpdINxOeDpllhMaYP6SzLaMvrfSyHRayM7Cq5/PRnHkXQ5uuQ==",
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc209kCRA9TVsSAnZWagAAoI8P/jl1m1aOASgBZDFxNB3X\n4MHVaadYwOxsPMuky0FEoXC1zwTsYBfnoe279+WAvVAj/YGwGDxaPgPZQNC8\nkh7RFZ6/or1fjKx2PSbqDvKsx9P1rNGnTFJUlQGUtnEZ2v9bTnqqI3BmI59c\nnRVd59TgUyMayuTTaTczaw2M6QFN1n3phIgFFUY3odkOzkP5GP23Cgqia4Mc\niQUxCf2eGYpxkRh8hlm1cX1jWrXAkRDvgmYsDaLvqiy51PvBCSqJYM0chBbN\nJBasLT5vWPiAQ3Y9mzKkT+1m+t22mdBBCGBaOVIs5dv/VSfWjNZQBLO/IhTw\nvkB73aT8rkhcTmOhJV24u6N9sjifqxjsZk1yy/nYgtiEFjQdWvfoVXReD3Pq\nmdVpKrgWcjN7u3uVMOLU8jxGII3CIYu3S1AmNDOb0x+u4JjlMsl6J/TyJ1If\nCtgk/o58agI3dlxD0WLPskWkbOhrXAJx12ObppGaj90y5z0+Qgsp1f4NCprn\n+NH7kYDZC0MTyZ8lk5sHmMyhoziE6abXNPxWbYV78ydpEBPOtQpWyIzb1W8e\nsFUB6VFQkVOys6bwsqfrdlyH0VrHzm4EbdjPX+6hCSuZ2r9V25107iNre2yu\n9QtrnSBkugxbF8XcgrZgFE+9ip+NzMPVV1yN4nkxWiMxOlrxeKAnxHBUbHfY\nAKl8\r\n=6MXL\r\n-----END PGP SIGNATURE-----\r\n",
    "shasum": "cfe826937c63a3652003639eb7fd36bf4b0a3660",
    "tarball": "https://registry.npmjs.org/@lerna/list/-/list-3.14.0.tgz",
    "unpackedSize": 16573
  },
  "engines": {
    "node": ">= 6.9.0"
  },
  "gitHead": "39da145c67ea587457694f318f32f967b9d66ea9",
  "homepage": "https://github.com/lerna/lerna/tree/master/commands/list#readme",
  "keywords": [
    "command",
    "lerna"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "evocateur",
      "email": "daniel.stockman@gmail.com"
    },
    {
      "name": "hzoo",
      "email": "hi@henryzoo.com"
    }
  ],
  "name": "@lerna/list",
  "optionalDependencies": {},
  "publishConfig": {
    "access": "public"
  },
  "readme": "# `@lerna/list`\n\n> List local packages\n\nInstall [lerna](https://www.npmjs.com/package/lerna) for access to the `lerna` CLI.\n\n## Usage\n\nThe `list` subcommand is aliased to several convenient shorthands (similar to [`npm ls`](https://docs.npmjs.com/cli/ls)):\n\n- `lerna ls`: Identical to `lerna list`, which is itself analogous to the `ls` command\n- `lerna ll`: Equivalent to `lerna ls -l`, showing [long](#--long) output\n- `lerna la`: Equivalent to `lerna ls -la`, showing [all](#--all) packages (including private ones)\n\n```sh\n$ lerna ls\npackage-1\npackage-2\n```\n\nYou might notice extra logging from `lerna` when running these commands in your shell.\nRest assured they will not infect your piped incantations,\nas all logs are emitted to `stderr`, not `stdout`.\n\nIn any case, you can always pass `--loglevel silent` to create pristine chains of magical shell wizardry.\n\n## Options\n\n- [`--json`](#--json)\n- [`--ndjson`](#--ndjson)\n- [`-a`, `--all`](#--all)\n- [`-l`, `--long`](#--long)\n- [`-p`, `--parseable`](#--parseable)\n- [`--toposort`](#--toposort)\n\n`lerna ls` also respects all available [Filter Flags](https://www.npmjs.com/package/@lerna/filter-options).\n\n### `--json`\n\nShow information as a JSON array.\n\n```sh\n$ lerna ls --json\n[\n  {\n    \"name\": \"package-1\",\n    \"version\": \"1.0.0\",\n    \"private\": false,\n    \"location\": \"/path/to/packages/pkg-1\"\n  },\n  {\n    \"name\": \"package-2\",\n    \"version\": \"1.0.0\",\n    \"private\": false,\n    \"location\": \"/path/to/packages/pkg-2\"\n  }\n]\n```\n\n**Tip:** Pipe to the [`json`](http://trentm.com/json/) utility to pick out individual properties:\n\n```sh\n$ lerna ls --json --all | json -a -c 'this.private === true' name\npackage-3\n```\n\n### `--ndjson`\n\nShow information as [newline-delimited JSON](http://ndjson.org).\n\n```sh\n$ lerna ls --ndjson\n{\"name\":\"package-1\",\"version\":\"1.0.0\",\"private\":false,\"location\":\"/path/to/packages/pkg-1\"}\n{\"name\":\"package-2\",\"version\":\"1.0.0\",\"private\":false,\"location\":\"/path/to/packages/pkg-2\"}\n```\n\n### `--all`\n\nAlias: `-a`\n\nShow private packages that are hidden by default.\n\n```sh\n$ lerna ls --all\npackage-1\npackage-2\npackage-3 (private)\n```\n\n### `--long`\n\nAlias: `-l`\n\nShow extended information.\n\n```sh\n$ lerna ls --long\npackage-1 v1.0.1 packages/pkg-1\npackage-2 v1.0.2 packages/pkg-2\n\n$ lerna ls -la\npackage-1 v1.0.1 packages/pkg-1\npackage-2 v1.0.2 packages/pkg-2\npackage-3 v1.0.3 packages/pkg-3 (private)\n```\n\n### `--parseable`\n\nAlias: `-p`\n\nShow parseable output instead of columnified view.\n\nBy default, each line of the output is an absolute path to a package.\n\nIn `--long` output, each line is a `:`-separated list: `<fullpath>:<name>:<version>[:flags..]`\n\n```sh\n$ lerna ls --parseable\n/path/to/packages/pkg-1\n/path/to/packages/pkg-2\n\n$ lerna ls -pl\n/path/to/packages/pkg-1:package-1:1.0.1\n/path/to/packages/pkg-2:package-2:1.0.2\n\n$ lerna ls -pla\n/path/to/packages/pkg-1:package-1:1.0.1\n/path/to/packages/pkg-2:package-2:1.0.2\n/path/to/packages/pkg-3:package-3:1.0.3:PRIVATE\n```\n\n### `--toposort`\n\nSort packages in topological order (dependencies before dependents) instead of lexical by directory.\n\n```sh\n$ json dependencies <packages/pkg-1/package.json\n{\n  \"pkg-2\": \"file:../pkg-2\"\n}\n\n$ lerna ls --toposort\npackage-2\npackage-1\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "directory": "commands/list",
    "type": "git",
    "url": "git+https://github.com/lerna/lerna.git"
  },
  "scripts": {
    "test": "echo \"Run tests from root\" && exit 1"
  },
  "version": "3.14.0"
}
